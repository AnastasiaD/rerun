#!/bin/bash

EXEC_DIR=$(dirname $(dirname $0))
echo $EXEC_DIR
# Source common function library
. $EXEC_DIR/lib/command.sh

# Init the handler
rerun_init 

# Get the options
while [ "$#" -gt 0 ]; do
    OPT="$1"
    case "$OPT" in
        # options without arguments
	# options with arguments
	-name)
	    arg_syntax_check "$#"
	    NAME="$2"
	    shift
	    ;;
	-description)
	    arg_syntax_check "$#"
	    DESC="$2"
	    shift
	    ;;
	-command)
	    arg_syntax_check "$#"
	    COMMAND="$2"
	    shift
	    ;;
	-module)
	    arg_syntax_check "$#"
	    MODULE="$2"
	    shift
	    ;;
	-req)
	    arg_syntax_check "$#"
	    REQ="$2"
	    shift
	    ;;
	-args)
	    arg_syntax_check "$#"
	    ARGS="$2"
	    shift
	    ;;
	-default)
	    arg_syntax_check "$#"
	    DEFAULT="$2"
	    shift
	    ;;
        # unknown option
	-?)
	    syntax_error
	    ;;
	  # end of options, just arguments left
	*)
	    break
    esac
    shift
done

# Post process the options
[ -z "$NAME" ] && {
    echo "Name: "
    read NAME
}

[ -z "$DESC" ] && {
    echo "Description: "
    read DESC
}

[ -z "$MODULE" ] && {
    echo "Module: "
    select MODULE in $(rerun_modules $RERUN_MODULES);
    do
	echo "You picked module $MODULE ($REPLY)"
	break
    done
}

[ -z "$COMMAND" ] && {
    echo "Command: "
    select COMMAND in $(rerun_commands $RERUN_MODULES $MODULE);
    do
	echo "You picked command $COMMAND ($REPLY)"
	break
    done
}


# Generate option metadata
mkdir -p $RERUN_MODULES/$MODULE/etc/commands/$COMMAN
(
    cat <<EOF
# generated by add-option
# $(date)
NAME=$NAME
DESCRIPTION="$DESC"
ARGUMENTS=${ARGS:-true}
REQUIRED=${REQ:-true}
DEFAULT=$DEFAULT

EOF
) > $RERUN_MODULES/$MODULE/etc/commands/$COMMAND/$NAME.option || error

# Done
echo "Created option: $RERUN_MODULES/$MODULE/etc/commands/$COMMAND/$NAME.option"


