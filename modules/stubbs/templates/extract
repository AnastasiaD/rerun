#!/usr/bin/env bash
#
# extract - this is a self contained self extracting rerun 
#
# generator: @GENERATOR@
# decoder: @DECODER@
# date: @DATE@
# user: @USER@
# archive-version: @VERSION@
# archive-release: @RELEASE@


# Function to print error message and exit
die() { echo "ERROR: $* " >&2 ; exit 1 ; }

case "$1" in
    --archive-version-release)
        vers=$(grep "^# archive-version:" $0|cut -f3 -d" ")
        rel=$(grep  "^# archive-release:" $0|cut -f3 -d" ")
        echo >&2 "${vers}-${rel}"
        exit 0 ;
        ;;
    --extract) EXTRACT_ONLY=true
        PAYLOAD=$2
        mkdir -p $PAYLOAD
        shift;
        ;;
esac



umask 0002

# extracted payload goes in here
: ${PAYLOAD:=`mktemp -d /tmp/rerun.bin.XXXXXX`} || die "failed making payload extraction directory"
export PAYLOAD

# Extraction time!
# - read lines from delimiter and pass to tar unarchive
cat $0                            | 
sed -e '1,/^__ARCHIVE_BELOW__/ d' | 
@DECODER@                         | 
(cd $PAYLOAD && tar xzf -) || die "unarchiving of $0 failed"

#
# Exit now if the --extract flag was set.
#
if [[ -n "$EXTRACT_ONLY" ]]
then exit $? 
fi

# CWD and TMDIR are passed to launcher as env variables
export oldCWD=$(pwd)
export CWD=/tmp
export PAYLOAD

# Change directory to the temp directory
cd $PAYLOAD || die "Could not change directory to payload."

# Run the launcher !
bash ./launcher "$@"
RETVAL=$?

# Go back to original working directory
cd $CWD

# Clean up after ourselves
rm -rf $PAYLOAD

# Stop this script from executing before we reach the binary archive!
exit ${RETVAL:=0}

__ARCHIVE_BELOW__
