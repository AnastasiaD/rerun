#!/bin/bash

. ../functions.sh

[ $# = 3 ] || { 
    echo >&2 "usage: $0 <moddir> <module> <command>" 
    return 1 ; 
}
local moddir=$1 module=$2 command=$3

# list the options that set a default
local optionsWithDefaults=$(optionsWithDefaults $RERUN_MODULES $MODULE $COMMAND)

# list the options that are required
local optionsRequired=$(optionsRequired $RERUN_MODULES $MODULE $COMMAND)

# list the options that have variables to export
local optionsExported=$(optionsExported $RERUN_MODULES $MODULE $COMMAND)

(
    cat <<EOF
# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: $(date)
#
#/ usage: $module:$command $(add_commandUsage $moddir $module $command)

# print USAGE and exit
rerun_option_usage() {
    grep '^#/ usage:' <"\$0" | cut -c4- >&2
    return 2
}

# print SYNTAX and exit
rerun_option_error() {
    if [[ "\$RERUN_COLOR" == "true" ]]
    then echo >&2 -e "${red}""SYNTAX: \$*""${_red}"
    else echo >&2 "SYNTAX: \$*" 
    fi
    exit 2
}

# check option has its argument
rerun_option_check() {
    [ "\$1" -lt 2 ] && rerun_option_usage
}

# options: [$(rerun_options $moddir $module $command)]
while [ "\$#" -gt 0 ]; do
    OPT="\$1"
    case "\$OPT" in
$(for o in $(rerun_options $moddir $module $command); do 
printf "      %s\n" "$(add_optionparser $o)"; 
done)
        # help option
        -?)
            rerun_option_usage
            exit 2
            ;;
        # end of options, just arguments left
        *)
          break
    esac
    shift
done

# If defaultable options variables are unset, set them to their DEFAULT
$(for opt in $(echo $optionsWithDefaults|sort); do
printf "[ -z \"$%s\" ] && %s=\"%s\"\n" $(trops $opt) $(trops $opt) $(rerun_optionDefault $moddir $module $command $opt)
done)
# Check required options are set
$(for opt in $(echo $optionsRequired|sort); do
printf "[ -z \"$%s\" ] && { echo >&2 \"missing required option: --%s\" ; return 2 ; }\n" $(trops $opt) $opt
done)
# If option variables are declared exportable, export them.
$(for opt in $(echo $optionsExported|sort); do
printf "export %s\n" $(trops $opt)
done)
#
return 0
EOF
) 
    # generated to stdout

