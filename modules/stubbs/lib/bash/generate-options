#!/usr/bin/env bash

set -e

LIBDIR=$(dirname $(dirname $0))
. $LIBDIR/functions.sh || exit 1

[ $# = 3 ] || { 
    echo >&2 "usage: $0 <moddir> <module> <command>" 
    exit 1 ; 
}
moddir=$1 module=$2 command=$3




#
# _generate_option_parser_ - Used to generate an entry inside options.sh
#
#     generate_option_parser option ? ? ? ? ? ? ? ? ?
#
generate_option_parser() {
	local optName=$1
    local optVarname=$(stubbs_option_variable $optName)
	local ARGUMENTS=$(stubbs_option_property $moddir/$module $optName ARGUMENTS)
	local SHORT=$(stubbs_option_property $moddir/$module $optName SHORT)
	if [ -n "${SHORT}" ] 
	then
		argstring=$(printf ' --%s|-%s' "${optName}"  "${SHORT}")
	else
		argstring=$(printf " --%s" "${optName}" )
    fi
	if [ "$ARGUMENTS" == "false" ]
	then
		printf " %s) %s=true ;;\n" "${argstring}" "$optVarname"
	else
    	printf " %s) rerun_option_check \$# ; %s=\$2 ; shift ;;\n" \
			"$argstring" "$optVarname"
	fi
}

# list the options that set a default
optionsWithDefaults=$(stubbs_options_matching $moddir/$module $command DEFAULT='[[:alnum:]]+')

# list the options that are required
optionsRequired=$(stubbs_options_matching $moddir/$module $command REQUIRED=true)

# list the options that have variables to export
optionsExported=$(stubbs_options_matching $moddir/$module $command EXPORT=true)

(
    cat <<EOF
# Generated by stubbs:add-option. Do not edit, if using stubbs.
# Created: $(date)
#
#/ usage: $module:$command $(stubbs_command_usage $moddir/$module $command)

# print USAGE and exit
rerun_option_usage() {
    grep '^#/ usage:' <"\$0" | cut -c4- >&2
    return 2
}

# print SYNTAX and exit
rerun_option_error() {
    if [[ "\$RERUN_COLOR" == "true" ]]
    then echo >&2 -e "${red}""SYNTAX: \$*""${_red}"
    else echo >&2 "SYNTAX: \$*" 
    fi
    exit 2
}

# check option has its argument
rerun_option_check() {
    [ "\$1" -lt 2 ] && rerun_option_usage
}

# options: [$(rerun_options $moddir $module $command)]
while [ "\$#" -gt 0 ]; do
    OPT="\$1"
    case "\$OPT" in
$(for option in $(rerun_options $moddir $module $command); do 
printf "      %s\n" "$(generate_option_parser $option)"; 
done)
        # help option
        -?)
            rerun_option_usage
            exit 2
            ;;
        # end of options, just arguments left
        *)
          break
    esac
    shift
done

# If defaultable options variables are unset, set them to their DEFAULT
$(for opt in $(echo $optionsWithDefaults|sort); do
printf "[ -z \"$%s\" ] && %s=\"%s\"\n" $(stubbs_option_variable $opt) $(stubbs_option_variable $opt) $(stubbs_option_property $moddir/$module $opt DEFAULT)
done)
# Check required options are set
$(for opt in $(echo $optionsRequired|sort); do
printf "[ -z \"$%s\" ] && { echo >&2 \"missing required option: --%s\" ; return 2 ; }\n" $(stubbs_option_variable $opt) $opt
done)
# If option variables are declared exportable, export them.
$(for opt in $(echo $optionsExported|sort); do
printf "export %s\n" $(stubbs_option_variable $opt)
done)
#
return 0
EOF
) 
    # generated to stdout

